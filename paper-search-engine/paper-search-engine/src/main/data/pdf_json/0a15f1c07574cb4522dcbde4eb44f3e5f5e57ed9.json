{
    "paper_id": "0a15f1c07574cb4522dcbde4eb44f3e5f5e57ed9",
    "metadata": {
        "title": "Software and Systems Modeling A method for transforming knowledge discovery metamodel to ArchiMate models",
        "authors": [
            {
                "first": "Ricardo",
                "middle": [],
                "last": "P\u00e9rez-Castillo",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Andrea",
                "middle": [],
                "last": "Delgado",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "\u00b7",
                "middle": [
                    "Francisco"
                ],
                "last": "Ruiz",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Virginia",
                "middle": [],
                "last": "Bacigalupe",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Mario",
                "middle": [],
                "last": "Piattini",
                "suffix": "",
                "affiliation": {},
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "Enterprise architecture has become an important driver to facilitate digital transformation in companies, since it allows to manage IT and business in a holistic and integrated manner by establishing connections among technology concerns and strategical/motivational ones. Enterprise architecture modelling is critical to accurately represent business and their IT assets in combination. This modelling is important when companies start to manage their enterprise architecture, but also when it is remodelled so that the enterprise architecture is realigned in a changing world. Enterprise architecture is commonly modelled by few experts in a manual way, which is error-prone and time-consuming and makes continuous realignment difficult. In contrast, other enterprise architecture modelling proposal automatically analyses some artefacts like source code, databases, services, etc. Previous automated modelling proposals focus on the analysis of individual artefacts with isolated transformations toward ArchiMate or other enterprise architecture notations and/or frameworks. We propose the usage of Knowledge Discovery Metamodel (KDM) to represent all the intermediate information retrieved from information systems' artefacts, which is then transformed into ArchiMate models. Thus, the core contribution of this paper is the model transformation between KDM and ArchiMate metamodels. The main implication of this proposal is that ArchiMate models are automatically generated from a common knowledge repository. Thereby, the relationships between different-nature artefacts can be exploited to get more complete and accurate enterprise architecture representations.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Keywords Enterprise architecture \u00b7 ArchiMate \u00b7 Knowledge discovery metamodel \u00b7 Model transformation \u00b7 MDE \u00b7 ATL",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "Enterprise architecture (EA) is a key mechanism to represent and manage IT and business in a holistic way by defining relationships between technology aspects and business, strategical, and motivational concerns. EA management (EAM) is the \"discipline for proactively and holistically leading enterprise responses to disruptive forces by identifying and analysing the execution of change toward desired business vision and outcomes. EA delivers value by presenting business and IT leaders with signature-ready recommendations for adjusting policies and projects to achieve target business outcomes that capitalize on relevant business disruptions\" [16] . One of the major benefits of EAM perceived by companies is that it enables them to achieve the effective communication and alignment between business and IT [29] , and drive the organization change [2] . Thus, EA is now perceived by companies as on the most useful tools to drive digital transformation, i.e., a technology-driven continuous change process of companies and our entire society [49] . Communicated Although the alignment of the business and IT can be achieved through EA models, such models must be revisited continuously, due to the agile adaptation of companies within changing markets and volatile technologies [67] . Companies are consequently forced to (re)define business goals and processes, along with the respective functionality of their IT stacks, by (re)developing and operating them in a continuous way [10, 12] . As a consequence, EA modelling has become in one of the most critical tasks within EAM [51] . EA modelling has traditionally been carried out manually by experts. However, manual EA modelling has several flaws [48] , such as error-proneness, time-consumption, slow and poor re-adaptation, and cost. In most of the cases, the main reason for such problems lies in the subjective opinion provided by experts when they create EA models, which might lead to models with missing elements and irrelevant elements. Thereby, some researchers have claimed the need to automate EA modelling through the use of different reverse engineering and mining techniques in order to discover EA models [12, 14, 47] . EA elements, according to different EA viewpoints, can be extracted from a wide variety of artefacts (e.g., information systems, enterprise service bus, databases, source code, etc.). Current proposals provide techniques and tools that focus on specific artefacts and generate certain EA elements and relationships in the same or various EA models. Most of the existing techniques are thus built as a silo solution (see left hand side in Fig. 1 ). In bottom-up silo solutions, different parsers or alternative mining methods are used to extract information from various independent artefacts; then different platform-specific models are built for every artefact. In silo solutions, various models may be integrated for the same artefact, while these silos are independent among them. Finally, some analysis methods can be applied to synthetize some information and abstract it into the target EA models. This signifies that the specific information extracted or generated by mining techniques are used independently for different analysers and transformations to generated certain EA viewpoints in isolation. What we propose in this research is the usage of Knowledge Discovery Metamodel (KDM) [45] , according to a Model-Driven Engineering (MDE) approach, in order to consider a common knowledge repository that can be used in an integrated way for automatic transformations. MDE can boost the automatic EA modelling since abstract representations of IT artefacts can be reused by automatic model transformations. In contrast, KDM ecosystems (see Fig. 1 ) facilitate the definition of EA model transformations based on a standard notation that allow to abstract specific reverse engineering details for all the specific artefacts. This idea is similar to the work proposed by [28] who introduced an integration layer for the automation of EA models that synchronizes static and runtime data from different data sources. The advantage of KDM is that many existing reverse engineering and mining tools use this standard and may be reused for EA modelling through the KDM to ArchiMate transformation proposed in this paper.",
            "cite_spans": [
                {
                    "start": 648,
                    "end": 652,
                    "text": "[16]",
                    "ref_id": null
                },
                {
                    "start": 812,
                    "end": 816,
                    "text": "[29]",
                    "ref_id": "BIBREF26"
                },
                {
                    "start": 853,
                    "end": 856,
                    "text": "[2]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 1047,
                    "end": 1051,
                    "text": "[49]",
                    "ref_id": "BIBREF47"
                },
                {
                    "start": 1054,
                    "end": 1066,
                    "text": "Communicated",
                    "ref_id": null
                },
                {
                    "start": 1283,
                    "end": 1287,
                    "text": "[67]",
                    "ref_id": "BIBREF64"
                },
                {
                    "start": 1485,
                    "end": 1489,
                    "text": "[10,",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 1490,
                    "end": 1493,
                    "text": "12]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 1583,
                    "end": 1587,
                    "text": "[51]",
                    "ref_id": null
                },
                {
                    "start": 1706,
                    "end": 1710,
                    "text": "[48]",
                    "ref_id": "BIBREF46"
                },
                {
                    "start": 2179,
                    "end": 2183,
                    "text": "[12,",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 2184,
                    "end": 2187,
                    "text": "14,",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 2188,
                    "end": 2191,
                    "text": "47]",
                    "ref_id": "BIBREF44"
                },
                {
                    "start": 3388,
                    "end": 3392,
                    "text": "[45]",
                    "ref_id": "BIBREF42"
                },
                {
                    "start": 3971,
                    "end": 3975,
                    "text": "[28]",
                    "ref_id": "BIBREF25"
                }
            ],
            "ref_spans": [
                {
                    "start": 2632,
                    "end": 2638,
                    "text": "Fig. 1",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 3742,
                    "end": 3748,
                    "text": "Fig. 1",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Introduction"
        },
        {
            "text": "The main contribution of this paper is the definition of a model transformation from KDM to EA models (represented according to ArchiMate). The transformation focuses on source code of information systems that is reversed into KDM models that are then transformed into ArchiMate by considering the application and technology layers of the standard. The model transformation is implemented in ATL and evaluated in a case study with KDM models obtained from the source code of a real-life information system. The main implication of this work is that the feasibility and suitability of a model-driven engineering approach for EA modelling are demonstrated through the definition and application of automatic model transformation. As a result, software representation in ArchiMate allows to represent what that business context is, and specifically, the relationship between a technology solution and the business context. Thus, EA modelling can be boosted by automating some modelling tasks while flaws associated with manual modelling are reduced. As a result, EA models can be continuously updated in an easier way, and the alignment of business and IT is therefore improved. This eventually allows companies to make better business/IT decisions. The remaining of the paper is structured as follows. Section 2 introduces the core concepts used in the paper. Section 3 discusses some related work. Section 4 explains in detail the KDM to ArchiMate transformation. Section 5 demonstrates the applicability of the model transformation in a proof-of-concept and with a case study involving six open-source systems. Section 6 evaluates the proposal through the analysis of results obtained in the case study. Finally, Sect. 7 draws conclusions and future work.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "This section introduces the main concepts involved in the research proposal. First, the core concepts of model-driven engineering are summarized. Second, ArchiMate is presented as the de facto standard for representing and managing EA models, which is used as the output metamodel. Last, the KDM standard is presented, which is used as the input metamodel in the proposed transformation.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "State of the art"
        },
        {
            "text": "MDE focuses on models as centre of the software development process, being models the most important artefacts from which other models and code are generated [27, 55, 64] . Models, metamodels and transformations between them are key elements in the process of MDE, being the basis for understanding, specifying, and analysing software systems. Metamodels define modelling languages (abstract syntax) providing concepts and relationships between them, and notations (concrete syntax) that can be graphical or textual, in order to specify models that represent those systems [26, 52] . Examples of such modelling languages are the Unified Modelling Language (UML) [38] , Business Process Model and Notation (BPMN 2.0) [34] , ArchiMate, and KDM. Meta-metamodels allow the definition of modelling languages to specify metamodels, such as the Metamodel Object Facility (MOF) [37] and Ecore, its technological implementation on Eclipse platform. Models specified in a modelling language \"conform to\" the corresponding metamodel, i.e., all concepts and relationships specified in the model are as defined by the metamodel.",
            "cite_spans": [
                {
                    "start": 158,
                    "end": 162,
                    "text": "[27,",
                    "ref_id": "BIBREF24"
                },
                {
                    "start": 163,
                    "end": 166,
                    "text": "55,",
                    "ref_id": "BIBREF52"
                },
                {
                    "start": 167,
                    "end": 170,
                    "text": "64]",
                    "ref_id": "BIBREF61"
                },
                {
                    "start": 573,
                    "end": 577,
                    "text": "[26,",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 578,
                    "end": 581,
                    "text": "52]",
                    "ref_id": "BIBREF49"
                },
                {
                    "start": 662,
                    "end": 666,
                    "text": "[38]",
                    "ref_id": "BIBREF35"
                },
                {
                    "start": 716,
                    "end": 720,
                    "text": "[34]",
                    "ref_id": "BIBREF31"
                },
                {
                    "start": 870,
                    "end": 874,
                    "text": "[37]",
                    "ref_id": "BIBREF34"
                }
            ],
            "ref_spans": [],
            "section": "Model-driven engineering"
        },
        {
            "text": "MDE can provide, based on model transformations, refinement steps that decrease the level of abstraction usually traveling from specification models to code, but also allowing other scenarios such as reverse engineering, i.e., traveling from code to models [26] , helping to recover the hidden knowledge (see Fig. 2 ). Other model transformations consider models at the same abstraction levels but in different domains (see Fig. 2 ). The model-driven architecture (MDA) [35] is a specific implementation of MDE provided by the Object Management Group (OMG) to support the development of systems based on transformation of models from specifications to code. In this context, the architecturedriven modernization (ADM) [39] approach supports the reengineering of information systems going from code to specification models.",
            "cite_spans": [
                {
                    "start": 257,
                    "end": 261,
                    "text": "[26]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 470,
                    "end": 474,
                    "text": "[35]",
                    "ref_id": "BIBREF32"
                },
                {
                    "start": 718,
                    "end": 722,
                    "text": "[39]",
                    "ref_id": "BIBREF36"
                }
            ],
            "ref_spans": [
                {
                    "start": 309,
                    "end": 315,
                    "text": "Fig. 2",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 424,
                    "end": 430,
                    "text": "Fig. 2",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Model-driven engineering"
        },
        {
            "text": "To specify transformations, specific-purpose languages are also needed. Examples are Query/Views/Transformations (QVT) [33] which defines two declarative languages (QVT Core and QVT Relations) and an imperative language (QVT Operational),as well as ATLAS Transformation Language (ATL) [26] which provides a mixture of declarative and imperative constructs, where the declarative style allows specifying relations between source and target patterns between elements from the metamodels in the transformation, being closer to the way developers perceived it. The imperative style allows using well-known constructs for specifying control flow elements such as loops, conditions, among others.",
            "cite_spans": [
                {
                    "start": 119,
                    "end": 123,
                    "text": "[33]",
                    "ref_id": "BIBREF30"
                },
                {
                    "start": 285,
                    "end": 289,
                    "text": "[26]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "Model-driven engineering"
        },
        {
            "text": "Transformations follow a common pattern known as model transformation pattern, where T AB is a model transformation between domains A and B. The execution of T AB takes as input the model M A and generates the model M B . M A , T AB and M B are models that, respectively, conform metamodels MM A , MM T and MM B (see Fig. 2 ). In turn, those three metamodels conform to the MMM meta-metamodel [26] . In the context of MDA, the MMM meta-metamodel is the Meta Object Facility (MOF). Additionally, a model transformation may occur within the same domain to reduce or increase abstraction, for example, from a Computational Independent Model CIM B to a Platform Independent Model PIM B (see Fig. 2 ).",
            "cite_spans": [
                {
                    "start": 393,
                    "end": 397,
                    "text": "[26]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [
                {
                    "start": 317,
                    "end": 323,
                    "text": "Fig. 2",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 687,
                    "end": 693,
                    "text": "Fig. 2",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Model-driven engineering"
        },
        {
            "text": "With the increasing interest on EA, various EA frameworks have been appeared and some of them have gained certain adoption in the industry such as TOGAF, DoDAF or MODAF, Zachman, ESARC, etc. The TOGAF framework [58] is extensively adopted by private companies and can be said that it is the de facto standard [57, 60] . TOGAF proposes the Architecture Development Method (ADM) as an iterative methodology for defining EA.",
            "cite_spans": [
                {
                    "start": 211,
                    "end": 215,
                    "text": "[58]",
                    "ref_id": "BIBREF55"
                },
                {
                    "start": 309,
                    "end": 313,
                    "text": "[57,",
                    "ref_id": "BIBREF54"
                },
                {
                    "start": 314,
                    "end": 317,
                    "text": "60]",
                    "ref_id": "BIBREF57"
                }
            ],
            "ref_spans": [],
            "section": "ArchiMate"
        },
        {
            "text": "EA modelling languages and specifications are necessary, alongside EA frameworks, to depict all the EA concerns in different architectural viewpoints. ArchiMate [59] is a modelling language compliant with TOGAF with which to represent different EA information models. ArchiMate allows the modelling of EA from different viewpoints, in which the position within the cells highlights the stakeholders' concerns (see Fig. 3 ).",
            "cite_spans": [
                {
                    "start": 161,
                    "end": 165,
                    "text": "[59]",
                    "ref_id": "BIBREF56"
                }
            ],
            "ref_spans": [
                {
                    "start": 414,
                    "end": 420,
                    "text": "Fig. 3",
                    "ref_id": "FIGREF5"
                }
            ],
            "section": "ArchiMate"
        },
        {
            "text": "ArchiMate proposes layers and aspects as the two main dimensions for organizing all the elements. Core layers represent the three levels at which it is possible to model an enterprise in ArchiMate, i.e., business, application, and technology. Aspects refers to: (i) the active structure (elements representing who/what makes the things), (ii) behaviour (elements indicating what is made and how it is made), and (iii) passive structure (things on which behaviour is performed). Despite the mentioned structure, composite elements belonging to various aspects are also allowed. Finally, it should be noticed that the ArchiMate specification define further layers for strategy, physical and implementation/ migration elements, as well as fourth additional aspects with motivational elements (why things are made). The scope of the model transformation of this research consists of the application layer (see highlighted part in Fig. 3 ).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 926,
                    "end": 932,
                    "text": "Fig. 3",
                    "ref_id": "FIGREF5"
                }
            ],
            "section": "ArchiMate"
        },
        {
            "text": "There are several EA suites that facilitate the manual modelling of ArchiMate models [49] . In this paper, we mostly are based on Archi tool [4] , an open source Archi-Mate modelling tool that is based on Eclipse project and, therefore, it provides the ArchiMate Ecore metamodel.",
            "cite_spans": [
                {
                    "start": 85,
                    "end": 89,
                    "text": "[49]",
                    "ref_id": "BIBREF47"
                },
                {
                    "start": 141,
                    "end": 144,
                    "text": "[4]",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "ArchiMate"
        },
        {
            "text": "KDM, recognized as standard ISO/IEC 19506, makes it possible to represent all software artefacts involved in a certain legacy information system in an integrated and standardized way [45] . This metamodel was specifically defined to be used within the architecture-driven modernization (ADM) approach [39] , i.e., reengineering of information systems following the (MDE) principles. A KDM model is obtained in an integrated manner because it works as a KDM repository that can be gradually completed with knowledge discovered through the analysis of different information systems and different artefacts. Thus, KDM avoid silo solutions where different miners, analysers and transformations operate in isolation (see Fig. 1 ).",
            "cite_spans": [
                {
                    "start": 183,
                    "end": 187,
                    "text": "[45]",
                    "ref_id": "BIBREF42"
                },
                {
                    "start": 301,
                    "end": 305,
                    "text": "[39]",
                    "ref_id": "BIBREF36"
                }
            ],
            "ref_spans": [
                {
                    "start": 716,
                    "end": 722,
                    "text": "Fig. 1",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Knowledge discovery metamodel"
        },
        {
            "text": "The KDM metamodel provides a comprehensive highlevel view of the behaviour, structure, and data of systems, while procedural information of the systems (i.e., sequence and control flow in source code) is not the main purpose of KDM. Such kind of information is better represented by using other standards like UML. The KDM metamodel is divided into layers representing both physical and logical software artefacts of information systems at several abstraction levels [36] . It separates knowledge about legacy information systems into various orthogonal concerns that are known in software engineering as architecture views (see Fig. 4 ). The KDM metamodel consists of four abstraction layers, each based on a previous layer. Furthermore, each layer is organized into packages that define a set of metamodel elements whose purpose is to represent a specific independent facet of knowledge related to information systems.",
            "cite_spans": [
                {
                    "start": 467,
                    "end": 471,
                    "text": "[36]",
                    "ref_id": "BIBREF33"
                }
            ],
            "ref_spans": [
                {
                    "start": 629,
                    "end": 635,
                    "text": "Fig. 4",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Knowledge discovery metamodel"
        },
        {
            "text": "There is certain research about reverse engineering of EA models. Such works consider, as input, a wide range of information systems artefacts [47] . For example, [14, 15] sources. It provides a specific metamodel and draws some techniques to achieve a better synchronization between EA models and organizations' facts. Also, Kleehaus and Matthes [28] leverage runtime service instrumentation of the existing IT architecture to automatically create, update, and enhance static EA models with runtime information. These authors propose a new integration layer that synchronizes static and runtime data from different data sources. In the same line, S\u00e1nchez et al. [54] provided an technique to collect \"information from multiple sources such as information systems, databases, files (system's logs, source code, configuration), and previously existing models\" and create enterprise models in a semi-automatic manner. Other proposals employ process mining techniques with runtime execution data to visualize the respective runtime enterprise architecture [63] . Similarly, Liu et al. [31] recover component-based architectures from software execution data. Truong et al. [62] proposed a method that combines \"enterprise's strategy together with data mining rules extracted from the data warehouse of the enterprise in order to make design-time changes to its business processes\". Werf et al. [65] also consider operational data for extracting architectural descriptions in which quality attributes are considered apart from functional aspects. Johnson et al. [25] proposed to use dynamic Bayesian networks for automating EA modelling, which was then specifically realized for ArchiMate models by [5] .",
            "cite_spans": [
                {
                    "start": 143,
                    "end": 147,
                    "text": "[47]",
                    "ref_id": "BIBREF44"
                },
                {
                    "start": 163,
                    "end": 167,
                    "text": "[14,",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 168,
                    "end": 171,
                    "text": "15]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 347,
                    "end": 351,
                    "text": "[28]",
                    "ref_id": "BIBREF25"
                },
                {
                    "start": 663,
                    "end": 667,
                    "text": "[54]",
                    "ref_id": "BIBREF51"
                },
                {
                    "start": 1053,
                    "end": 1057,
                    "text": "[63]",
                    "ref_id": "BIBREF60"
                },
                {
                    "start": 1082,
                    "end": 1086,
                    "text": "[31]",
                    "ref_id": "BIBREF28"
                },
                {
                    "start": 1169,
                    "end": 1173,
                    "text": "[62]",
                    "ref_id": "BIBREF59"
                },
                {
                    "start": 1390,
                    "end": 1394,
                    "text": "[65]",
                    "ref_id": "BIBREF62"
                },
                {
                    "start": 1557,
                    "end": 1561,
                    "text": "[25]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 1694,
                    "end": 1697,
                    "text": "[5]",
                    "ref_id": "BIBREF3"
                }
            ],
            "ref_spans": [],
            "section": "Related work"
        },
        {
            "text": "In contrast with our research, all the mentioned works do not follow a clear MDE approach. In this sense, there exist some works that generates EA models by following the MDE principles. For example, Ge et al. [17] attempt to model a system-of-systems (SoS) architecture framed in the DoDAF Metamodel. This work facilitates the automated transformation of executable models from architectural information. Also, Hu et al. [22] define an MDE method for service oriented SoS architecting, modelling and simulation. This work employs SysML to cope with the intrinsic complexity of SoS and make it possible the alignment of business requirement and IT infrastructure. Bogner and Zimmermann [6] use some metamodeling principles together with some ontology-based methods for the integration of microservices architectures. Similar to this work, Granchelli et al. [18] employ a domain-specific language (DSL) to automatically represent microservices architectures.",
            "cite_spans": [
                {
                    "start": 210,
                    "end": 214,
                    "text": "[17]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 422,
                    "end": 426,
                    "text": "[22]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 686,
                    "end": 689,
                    "text": "[6]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 857,
                    "end": 861,
                    "text": "[18]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "Related work"
        },
        {
            "text": "All the previous works (in the context of MDE) do not employ KDM as the core metamodel to manage a common knowledge repository. There are other works using KDM and model transformations in the context of MDE. For example, Landi et al. [30] define a DSL based in the Structure KDM layer for representing planned architectures, i.e., not only the architectural abstractions of the system but also the access rules that must exist between them and be maintained over time. Moutaouakkil and Mbarki [32] define a KDM extension to represent the Model/View/Controller (MVC) architectural concepts of web application into KDM models. However, this information is not used to generate EA models. P\u00e9rez-Castillo et al. [44] provide an ADM framework based on KDM to generate business process models from KDM models, which are previously obtained through various sources, for example, from source code [42, 50] , data models [46] , or events logs [50] .",
            "cite_spans": [
                {
                    "start": 235,
                    "end": 239,
                    "text": "[30]",
                    "ref_id": "BIBREF27"
                },
                {
                    "start": 494,
                    "end": 498,
                    "text": "[32]",
                    "ref_id": "BIBREF29"
                },
                {
                    "start": 709,
                    "end": 713,
                    "text": "[44]",
                    "ref_id": "BIBREF41"
                },
                {
                    "start": 890,
                    "end": 894,
                    "text": "[42,",
                    "ref_id": "BIBREF39"
                },
                {
                    "start": 895,
                    "end": 898,
                    "text": "50]",
                    "ref_id": "BIBREF48"
                },
                {
                    "start": 913,
                    "end": 917,
                    "text": "[46]",
                    "ref_id": "BIBREF43"
                },
                {
                    "start": 935,
                    "end": 939,
                    "text": "[50]",
                    "ref_id": "BIBREF48"
                }
            ],
            "ref_spans": [],
            "section": "Related work"
        },
        {
            "text": "Finally, there are other works that provide model transformations between some EA concepts or artefacts and ArchiMate models. For example, Buckl et al. [8] propose an approach based on model transformations implemented in QVT to transform EA data to their graphical representation. Today, the creation of visual EA models is already solved through the majority of EA suites. Our current proposals focus on generating EA models from other artefacts by reverse engineering. Other work employing model transformations is proposed by [11] . However, those model transformations are actually metamodel mappings with fictitious model transformations, i.e., such transformations are not coded in a model transformations language like ATL or QVT as our proposal is. Thus, such transformations cannot be executed automatically. Engelsman et al. [13] propose some guidelines for transforming business models into EA models, with which to improve the traceability of the contribution of IT to the value offerings of a business. However, this transformation has not been implemented. Holm et al. [21] propose an approach and a tool to generate EA models (using Archimate as example) based on network scanning for recovering data automatically and then mapping this data to EA elements. This approach needs to manually define the mappings within the tool to generate the EA model each time (for each language used, i.e., Archimate) with no use of KDM, where the transformation is implemented in the tool. This makes the usability, extensibility, and changeability somehow limited. Opposite our approach provides clear rules for mappings defined in ATL which is easy to extend for new mappings, as presented in Sect. 4.3. Pepin et al. [41] a software modernization approach is taken to link legacy software architecture models with enterprise business models via KDM and using MoDisco [7] and ATL transformations to generate Application, Functional and Business Process models. However, the metamodels used are not standard (i.e., not Archimate or BPMN 2.0) making it difficult for organizations to integrate into their models. Differently, our approach is completely based on existing standards both for models and for transformations.",
            "cite_spans": [
                {
                    "start": 152,
                    "end": 155,
                    "text": "[8]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 530,
                    "end": 534,
                    "text": "[11]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 836,
                    "end": 840,
                    "text": "[13]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 1084,
                    "end": 1088,
                    "text": "[21]",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 1721,
                    "end": 1725,
                    "text": "[41]",
                    "ref_id": "BIBREF38"
                },
                {
                    "start": 1871,
                    "end": 1874,
                    "text": "[7]",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [],
            "section": "Related work"
        },
        {
            "text": "The research method used is Design Science Research Method (DSRM) [20, 24, 40, 66] . DSRM proposes a set of steps or activities to complete the design and construction of some artefacts. The piece of research in this article (the KDM-to-ArchiMate transformation) is classified as \"development-and evaluation-focused design science research\". This is owing to the fact this research is mainly concentrated in the three last activities of the DSRM (i.e., design and develop, demonstrate and evaluate). This DSRM scenario is aimed at designing and developing an artefact using both research and creative methods, as well as a demonstration and a thorough evaluation by means of experiments, case studies or other research strategies.",
            "cite_spans": [
                {
                    "start": 66,
                    "end": 70,
                    "text": "[20,",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 71,
                    "end": 74,
                    "text": "24,",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 75,
                    "end": 78,
                    "text": "40,",
                    "ref_id": "BIBREF37"
                },
                {
                    "start": 79,
                    "end": 82,
                    "text": "66]",
                    "ref_id": "BIBREF63"
                }
            ],
            "ref_spans": [],
            "section": "Research proposal"
        },
        {
            "text": "The artefact under investigation is a method for extracting EA models (represented using ArchiMate) from KDM models. In order to understand how KDM models are generated, Sect. 4.1 introduces the generic technique to obtain Archi-Mate models from information systems' artefacts. Then, the generation of KDM models specifically from source code is detailed in Sect. 4.2. Finally, Sect. 4.3 covers the main goal of this research, the model transformation between KDM and ArchiMate.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Research proposal"
        },
        {
            "text": "ArchiRev is the method for extracting EA Models which has been proposed in a previous research [48] . ArchiRev considers ArchiMate for modelling EA. This method is generic and extensible since it is based on a set of reverse engineering techniques aimed at generating ArchiMate models by analysing software artefacts. In this method, different software artefacts can be considered as input by using specific and/or adapted reverse engineering techniques which, in turn, can discover and model further EA elements. Different reverse engineering within ArchiRev not only contribute to generate more accurate and complete EA models (i.e., further elements). Additionally, such techniques take into account certain information of IS artefacts to generate specific viewpoints concerning different stakeholders (see Fig. 3 ). It should be noticed that different EA views can be generated from EA models according to the viewpoints. Thereby, information gathered from IS artefacts drives the selection of certain elements to be included in a specific view, as well as some relationships between those elements. In these specific viewpoints, some layout issues could be addressed through reverse engineering techniques included in ArchiRev. Therefore, ArchiRev can be understand as a three-dimensional approach with three different dimensions that can be considered (see Fig. 5 ). These dimensions are (i) the possible EA viewpoints/concerns that ArchiRev is able to extract and generate; (ii) the possible reverse engineering techniques that could be used to extract some of those specific EA concerns/viewpoints; and finally (iii) the dimension of IS artefacts that are considered during reverse engineering for gathering relevant EA information. Table 1 shows the most common possible combinations between systems artefacts (in rows), reverse engineering techniques (columns to the left) and the EA viewpoints according to Archimate (columns to the right).",
            "cite_spans": [
                {
                    "start": 95,
                    "end": 99,
                    "text": "[48]",
                    "ref_id": "BIBREF46"
                }
            ],
            "ref_spans": [
                {
                    "start": 810,
                    "end": 816,
                    "text": "Fig. 3",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 1363,
                    "end": 1369,
                    "text": "Fig. 5",
                    "ref_id": null
                },
                {
                    "start": 1741,
                    "end": 1748,
                    "text": "Table 1",
                    "ref_id": "TABREF4"
                }
            ],
            "section": "General method for reversing ArchiMate models"
        },
        {
            "text": "ArchiRev employs KDM to represent all the information extracted and generated through the analysis of information systems' artefacts. In this way, all the knowledge is abstracted in a technological independent way. Different KDM packages and layers could be used depending on the artefacts analysed. The scope of the model transformation presented in this research is restricted to the Code and Action packages of the KDM metamodel, since we focus on source code. Further model transformations could be considered for other artefacts like data model, enterprise service bus, among other. The advantage of using KDM is that its metamodel covers the abstraction of different software artefacts. Code and Action within the Program Elements layer are the specific KDM packages to represent the source code are Code and Action (see Fig. 4 ). Program Elements is the second abstraction layer of KDM after the Infrastructure layer and it aims to provide a language-independent intermediate representation for various constructs determined by common programming languages. The Code package represents the named items from the source code and several structural relationships between them and the Action package focuses on behaviour descriptions and control-and data-flow relationships determined by them. Figure 6 shows the most important meta-elements of the Code and Action packages of the KDM metamodel. According to the KDM Code metamodel, each analysed source code artefact is represented as a CodeModel element, the root meta-element. A CodeModel is then composed as a set of code elements (AbstractCodeElements) such as Callable-Unit, StorableUnit, and so on. The code elements can be interrelated among them (see AbstractActionRelationships) through relationships with different semantics such as Flow, Calls, Reads, Writes.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 827,
                    "end": 833,
                    "text": "Fig. 4",
                    "ref_id": "FIGREF2"
                },
                {
                    "start": 1297,
                    "end": 1305,
                    "text": "Figure 6",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "Generation of knowledge discovery metamodel repository"
        },
        {
            "text": "In addition to the elements shown in Fig. 6 , other basic elements of the kdm and core packages in the KDM layers below are used in combination, for example, the Annotation element that allows textual descriptions to be attached to any instance of a model element. Information collected in these annotations that are attached to CompilationUnit elements are then a key source of information in the proposed model transformation.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 37,
                    "end": 43,
                    "text": "Fig. 6",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "Generation of knowledge discovery metamodel repository"
        },
        {
            "text": "For the case of source code, the most common technique employed to extract relevant information is static or dynamic analysis (see Table 1 ). Static analysis consists of a syntax inspection of the source code, which can be expressed in terms of a grammar. Commonly, we speak about parsers that are in charge of recognizing the whole structure of a piece of code and generate an abstract syntax tree (AST) from which specific information can be then gathered and represented in the KDM model (e.g., callable units belonging to a compilation unit). On the one hand, the advantage of static analysis is that there are many tools that support the automatic creation of specific parsers from grammars, which are available for the most common programming languages. On the other hand, static analysis fails to detect dead code (unreachable parts of source code) and to figure out parts of the code most frequently executed. Because of these inconveniences, dynamic analysis inspects the source code while it is being executed. Sometimes, source code is annotated with some statements able to register execution information, while other times profiling techniques (based on the execution environment) are used without altering the original artefact.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 131,
                    "end": 138,
                    "text": "Table 1",
                    "ref_id": "TABREF4"
                }
            ],
            "section": "Generation of knowledge discovery metamodel repository"
        },
        {
            "text": "Within the context of ArchiRev, different parsers and dynamic analysers might be used in combination to inspect artefacts written in different programming languages. The derived information is then integrated according to the KDM metamodel. In the case study presented in the empirical validation (Sect. 5.2), we consider KDM models that are extracted from information systems written in C#. For this case, a parser has been coded based on the C# grammar. Specific implementation details are omitted in this paper since this kind of efforts has been extensively covered both in academia and industry. The recognized AST is built according to the C# metamodel depicted in Fig. 7 . Then, a mapping is produced almost directly from the C# metamodel to the KDM metamodel previously depicted in Fig. 6. ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 671,
                    "end": 677,
                    "text": "Fig. 7",
                    "ref_id": "FIGREF4"
                },
                {
                    "start": 790,
                    "end": 797,
                    "text": "Fig. 6.",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "Generation of knowledge discovery metamodel repository"
        },
        {
            "text": "The M2M transformation from KDM to ArchiMate is based on one input and output metamodel. The input metamodel is the KDM metamodel defined in the standard ISO/IEC 19506 [45] , while the output metamodel is the ArchiMate metamodel defined by Archi tool [4] . Although there is a tool-independent ArchiMate specification named Model Exchange File Format [61] , we decided to use the Archi metamodel. The main drawback of not using the Model Exchange File Format is that it prevents the direct The transformation from KDM to ArchiMate is based on the following mappings, which are shown in Table 2 for elements and in Table 3 for relationships between those elements. The whole model transformation implementation is available online [3] . The overall idea is that some of the compilation units in the KDM model are abstracted to a relevant software element in the target ArchiMate model. Also, associations and dependencies between these compilation units are analysed under some constraints to be filtered out and transformed into specific relationships between the respective ArchiMate elements.",
            "cite_spans": [
                {
                    "start": 168,
                    "end": 172,
                    "text": "[45]",
                    "ref_id": "BIBREF42"
                },
                {
                    "start": 251,
                    "end": 254,
                    "text": "[4]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 351,
                    "end": 355,
                    "text": "[61]",
                    "ref_id": "BIBREF58"
                },
                {
                    "start": 730,
                    "end": 733,
                    "text": "[3]",
                    "ref_id": "BIBREF1"
                }
            ],
            "ref_spans": [
                {
                    "start": 586,
                    "end": 593,
                    "text": "Table 2",
                    "ref_id": "TABREF5"
                },
                {
                    "start": 614,
                    "end": 621,
                    "text": "Table 3",
                    "ref_id": "TABREF6"
                }
            ],
            "section": "KDM to ArchiMate transformation"
        },
        {
            "text": "As it can be seen in Table 2 , the mappings defined refer to a reduced set of elements from both metamodels, which are based on mappings provided in [43] . These mappings are based on the source code annotations and their semantics according to some software architectural patterns as well as according to some common coding platforms. However, mappings in Table 2 might be enhanced by adding more elements and the corresponding mappings to be used in the model transformation.",
            "cite_spans": [
                {
                    "start": 149,
                    "end": 153,
                    "text": "[43]",
                    "ref_id": "BIBREF40"
                }
            ],
            "ref_spans": [
                {
                    "start": 21,
                    "end": 28,
                    "text": "Table 2",
                    "ref_id": "TABREF5"
                },
                {
                    "start": 357,
                    "end": 364,
                    "text": "Table 2",
                    "ref_id": "TABREF5"
                }
            ],
            "section": "KDM to ArchiMate transformation"
        },
        {
            "text": "The mapping proposed considers four target ArchiMate elements (see Table 2 ): application functions, application services, application components and data objects. All these elements are in the Application layer of ArchiMate (see Fig. 3 ). This is due to the fact that the EA knowledge and semantics embedded in the source code (used as the input artefact) is mainly related to that layer. Application functions and components are generated from compilation units that, respectively, provides knowledge about the behaviour and the active structure. These elements represent the internal view of the EA model, while those related with the external view (such us application services and interfaces) are difficult to be generated from the source code information in the KDM model. Despite this fact, application services can be still generated from compilation units annotated as 'services'. With regard to the collaborative behaviour (e.g., application interactions and application processes), these are not considered as target ArchiMate elements. Instead of this, the model transformation focuses on generating relationships between application components and applications functions. Finally, data objects represent the passive structure and can be mapped since the information of the usage of some data structures from the source code is available in the KDM model (e.g., some compilation units are representations of business/data entities in the source code).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 67,
                    "end": 74,
                    "text": "Table 2",
                    "ref_id": "TABREF5"
                },
                {
                    "start": 230,
                    "end": 236,
                    "text": "Fig. 3",
                    "ref_id": "FIGREF5"
                }
            ],
            "section": "KDM to ArchiMate transformation"
        },
        {
            "text": "The only origin element from the KDM metamodel that is taken into account is the Compilation Unit element, for which we analyse the type of annotation present in order to define to which element in the Archimate Metamodel it has to be transformed. When the annotation corresponds to ManagedBean, Controller, Component, Named and Service, the corresponding element is the Application Function element. When the annotation corresponds to Entity, Table, MappedSuperclass the corresponding element is the Data Object element, and when the annotation corresponds to the Repository or the SpringBootApplication element, the corresponding one is the Application Component element. For relations between elements, the corresponding type in Archimate for each one is shown in Table 3 .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 444,
                    "end": 450,
                    "text": "Table,",
                    "ref_id": null
                },
                {
                    "start": 767,
                    "end": 774,
                    "text": "Table 3",
                    "ref_id": "TABREF6"
                }
            ],
            "section": "KDM to ArchiMate transformation"
        },
        {
            "text": "The transformation was implemented in ATL and takes as input a KDM model compliant with the KDM metamodel and generates as output an ArchiMate model compliant with the ArchiMate metamodel, which also includes the graphical representation of the elements. In the following, the transformation and its rules are described. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "KDM to ArchiMate transformation"
        },
        {
            "text": "The transformation defines mainly three types of rules, in which we separated three different creation types to organize the rules providing better understanding and extensibility:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Transformation rules"
        },
        {
            "text": "1. From the root of KDM metamodel Segment, to the root of ArchiMate metamodel ArchimateModel, creating default Folders and Viewpoints to include graphical elements. 2. From CompilationUnit KDM elements to its corresponding ArchiMate elements, based on the annotation or name of the KDM element (cf. Table 2 ).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 299,
                    "end": 306,
                    "text": "Table 2",
                    "ref_id": "TABREF5"
                }
            ],
            "section": "Transformation rules"
        },
        {
            "text": "between ArchiMate elements, depending on the target elements that were generated (cf. Table 3 ).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 86,
                    "end": 93,
                    "text": "Table 3",
                    "ref_id": "TABREF6"
                }
            ],
            "section": "From relations between KDM elements into relations"
        },
        {
            "text": "It generates the structure of the output ArchiMate model which will be populated with the corresponding elements depending on the input model. The structure of the output model will be the same for every input model, as a way to organize the resulting file. Tables 2 and 3 refer to a reduced set of elements, at this point we only populate three folders:",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 258,
                    "end": 272,
                    "text": "Tables 2 and 3",
                    "ref_id": "TABREF5"
                }
            ],
            "section": "Rule type 1: KDM segment to ArchiMate model"
        },
        {
            "text": "\u2022 Application folder which contains the ArchiMate elements generated from the KDM CompilationUnit elements, \u2022 Relations which include all the ArchiMate relations generated, and",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Rule type 1: KDM segment to ArchiMate model"
        },
        {
            "text": "\u2022 Views in which we generate the twenty-five Viewpoints proposed in the ArchiMate specification, where the graphical notation corresponding to the generated elements is included, for each element and relation between elements. Although only the Application and Information Structure viewpoints will be fully covered, the model transformation provides all the ArchiMate viewpoints as a predefined structure for helping with the future manual refinements by enterprise architects.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Rule type 1: KDM segment to ArchiMate model"
        },
        {
            "text": "As mentioned before, each ViewPoint presents graphical diagrams containing selected types of elements, which can belong to several ViewPoints, and correspond to elements already generated in the model. As an example of the View-Points generated, we can mention: (i) Information Structure, which includes elements Business object, Representation, Data object, Artifact and Meaning, (ii) Organization which contains elements Business actor, Business role, Business collaboration, Location and Business interface. The complete list of ViewPoints and corresponding elements can be seen in the ArchiMate specification [59] .",
            "cite_spans": [
                {
                    "start": 613,
                    "end": 617,
                    "text": "[59]",
                    "ref_id": "BIBREF56"
                }
            ],
            "ref_spans": [],
            "section": "Rule type 1: KDM segment to ArchiMate model"
        },
        {
            "text": "Listing 1 shows an excerpt of the Segment2Archimat-eModel rule to present as example the generation of the root model and one view (view1: Information Structure Viewpoint) as well as one of the empty folder (folder1: Strategy) for the generation of the views and folders mentioned before.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Rule type 1: KDM segment to ArchiMate model"
        },
        {
            "text": "This type of rule deals with the generation of Archimate elements from KDM CompilationUnit elements, depending on the annotation or name it presents. To determine which rule will be applied we defined several helpers, which based on the KDM input element returns true on the type of annotation or name that it presents. Also, in these rules we added the generation of the corresponding graphical element that will be included in the associated viewpoint, under the corresponding View element that we created in the first rule.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Rules type 2: KDM CompilationUnit to Archimate elements"
        },
        {
            "text": "rule Segment2ArchimateModel{ from input: KDM!Segment to output: ArchiMate!model( id <-input.name, folder <-output.folder -> union(ArchiMate!Folder.allInstances()), name <-input.name --file <-, --metadata <-, --properties <-, --purpose <-, --version <-), view1: ArchiMate!ArchimateDiagramModel( name <-'Information Structure Viewpoint', child <-KDM!CompilationUnit.allInstancesFrom('IN') -> select(dobj | thisModule.isDataObj(dobj)) -> collect(doDiag| thisModule.resolveTemp(doDiag,'outputDiagObj3')), id <-view1.name --connectionRouterType <-, --documentation <-, --properties <-, --viewpoint <-), \u2026\u2026\u2026. folder1: ArchiMate!Folder( name <-'Strategy', id <-'idS', type <-#strategy --folder <---element <---documentation <-, --properties <-, ), Each graphical element includes the Bound definitions (position and size inside the view), and the graphical representation of the relations for which the element is the source. Although the graphical representation of the relations is created in the type 3 relations rules, in the rules type 2 we are describing here, they are referenced in the corresponding element and connected to the general diagram. Anyway, visualization matters, like graphical and layout concerns, are outside of the scope of the model transformation. It simply takes default values since the visualization concerns is delegated in human modelers.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lis\u019fng 1. Rule Segment2ArchimateModel excerpt showing one View and one Folder crea\u019fon"
        },
        {
            "text": "In Listing 2 we present an example of a type 2 rule, Com-pilationUnit2ApplicationFunction to generate Archimate ApplicationFunction elements from KDM CompilationUnit elements, and in Listing 3, the helper function that is invoked, which returns true or false depending on the type of KDM element that is being checked.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lis\u019fng 1. Rule Segment2ArchimateModel excerpt showing one View and one Folder crea\u019fon"
        },
        {
            "text": "In Listing 4 another example of type 2 rule is presented, CompilationUnit2DataObject, to generate Archimate Data-Object elements from KDM CompilationUnit elements, an in Listing 5, the helper function is presented, that is invoked from the rule and returns true or false depending on the type of KDM element that is being checked as input. Table 2 rule CompilationUnit2ApplicationFunction{ from input: KDM!CompilationUnit (thisModule -> isAppFunc(input)) to output: ArchiMate!ApplicationFunction( name <-input.name, id <-input.name --properties <---documentation <-), outputDiagObj: ArchiMate!DiagramObject( name <-input.name+'1', id <-input.name+'1', bounds <-outputbound, archimateElement <-output, sourceConnection <-KDM!CodeRelationship.allInstancesFrom('IN') -> select (rel | rel.from.name = output.name) -> collect(relDiag | thisModule.resolveTemp(relDiag, 'outputrel')), targetConnections <-KDM!CodeRelationship.allInstancesFrom('IN') -> select (rel | rel.to.name = output.name) -> collect(relDiag | thisModule.resolveTemp(relDiag, 'outputrel')) ), outputbound: ArchiMate!Bounds (",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 340,
                    "end": 347,
                    "text": "Table 2",
                    "ref_id": "TABREF5"
                }
            ],
            "section": "Lis\u019fng 1. Rule Segment2ArchimateModel excerpt showing one View and one Folder crea\u019fon"
        },
        {
            "text": "x <-100, y <-100, width <-120, height <-55 ), Table 2 rule CompilationUnit2DataObject{ from input: KDM!CompilationUnit (thisModule -> isDataObj(input)) to output: ArchiMate!DataObject( name <-input.name, id <-input.name --documentation <-, --properties <-), outputDiagObj: ArchiMate!DiagramObject( name <-input.name+'1', id <-input.name+'1', bounds <-outputbound, archimateElement <-output, sourceConnection <-KDM!CodeRelationship.allInstancesFrom('IN') -> select (rel | rel.from.name = output.name) -> collect(relDiag | thisModule.resolveTemp(relDiag, 'outputrel')), targetConnections <-KDM!CodeRelationship.allInstancesFrom('IN') -> select (rel | rel.to.name = output.name)-> collect(relDiag | thisModule.resolveTemp(relDiag, 'outputrel')) ), outputbound: ArchiMate!Bounds ( x <-100, y <-100, width <-120, height <-55 ), Table' )) then true else if (input.name -> indexOf(' Table' It is easy to note that adding a new rule to generate elements from a new mapping is straightforward: it only requires to add a new rule similar to the ones presented in Listing 2 and Listing 4, and define the corresponding helper to be invoked from the rule, which is in charge of checking whether the KDM input element corresponds to the desired one. So, the difference between the defined rules is provided by the helpers which allow the identification of specific elements from the KDM input Model, to be mapped to the corresponding Archimate output Model, as defined by the mappings presented in Table 2 .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 46,
                    "end": 53,
                    "text": "Table 2",
                    "ref_id": "TABREF5"
                },
                {
                    "start": 823,
                    "end": 829,
                    "text": "Table'",
                    "ref_id": null
                },
                {
                    "start": 876,
                    "end": 882,
                    "text": "Table'",
                    "ref_id": null
                },
                {
                    "start": 1484,
                    "end": 1491,
                    "text": "Table 2",
                    "ref_id": "TABREF5"
                }
            ],
            "section": "Lis\u019fng 2. Rule Compila\u019fonUnit2Applica\u019fonFunc\u019fon excerpt elements genera\u019fon from mappings in"
        },
        {
            "text": "The type of the Archimate relation that is generated depends on the type of elements that are present in the source and target ends of the relation to use a relationship by default. The mapping that defines the type of relation is the one presented in Table 3 , which is used in the rules to generate the corresponding type of relation, as well as the graphical representation of the relation. This is used as default relationship as the most common association between two kind of ArchiMate elements although this is not the only possible relationship that could be established according to ArchiMate. In these types of rules, we also defined helpers to check the type of relation that is under generation, and also include the graphical element and the reference to the corresponding existing Archimate element. In Listing 6 we present as an example a rule of a relation generation and in Listing 7 the corresponding helper.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 252,
                    "end": 259,
                    "text": "Table 3",
                    "ref_id": "TABREF6"
                }
            ],
            "section": "Rules type 3: KDM relations to Archimate relations"
        },
        {
            "text": "As mentioned before, the transformation is easily extensible to include new mappings for elements from KDM to Archimate, by adding the new rule only copying the structure of the type of rule that applies, and the corresponding helper to identify the input element and the corresponding output. Table 3 rule KDMRelationship2Access{ from input: KDM!CodeRelationship ( thisModule.isAccessRel(input) ) to output: ArchiMate!AccessRelationship( id <-input.from.name + 'TO' + input.to.name, name <-input.from.name + 'TO' + input.to.name, source <-thisModule.resolveTemp(input.from,'output'), target <-thisModule.resolveTemp(input.to,'output') --accessType <-, --documentation <-, --properties <-, ), outputrel: ArchiMate!Connection( name <-output.name+'1', id <-output.name+'1', archimateRelationship <-output, source <-thisModule.resolveTemp(input.from, 'outputDiagObj'), target <-thisModule.resolveTemp(input.to, 'outputDiagObj') ), Fig. 9 Excerpt of the Application Cooperation Viewpoint diagram of the generated ArchiMate model if (((thisModule -> isDataObj(input.from)) and thisModule -> isAppFunc(input.to)) or ((thisModule -> isDataObj(input.to)) and (thisModule ->isAppFunc(input.from) or thisModule -> isAppComp(input.from)))) then true else false endif; A compatibility problem with Archi tool was detected when generating the Archimate model. The Ecore metamodel used for the transformation, which we downloaded directly from the GitHub repository 1 of Archi tool [4] , was not exactly managed in the same way by Archi tool. The result was that some elements had different names in the Ecore metamodel and the model internally managed by the tool. This means that the output we generated (which we named with the .archimate extension to be imported by the tool) was not compliant with the tool metamodel and thus could not be opened in the tool.",
            "cite_spans": [
                {
                    "start": 1468,
                    "end": 1471,
                    "text": "[4]",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [
                {
                    "start": 294,
                    "end": 301,
                    "text": "Table 3",
                    "ref_id": "TABREF6"
                },
                {
                    "start": 928,
                    "end": 934,
                    "text": "Fig. 9",
                    "ref_id": null
                }
            ],
            "section": "Considerations"
        },
        {
            "text": "To solve this, we decided to modify the Archimate metamodel we used in the transformation, by adding the elements needed for the tool to understand the output file. Specifically, we kept the base elements to preserve the compatibility with other Archimate files apart from those generated by our transformation. In order to use the original elements, we added: ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lis\u019fng 7. Helper isAccessRel example of helper for rela\u019fonship genera\u019fon in Lis\u019fng 6"
        },
        {
            "text": "To validate the automated generation of Archimate models from KDM models with our transformation, we used first a proof-of-concept to test and demonstrate the applicability of the model transformation (cf. Section 5.1), and then we conducted a more formal case study with six open-source information systems used for generating six KDM models used as input (cf. Section 5.2).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Demonstration"
        },
        {
            "text": "Before conducting the formal case study, we run a proof of concept with a real software application from which a KDM model was discovered through the ArchiRev Tool",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proof-of-concept"
        },
        {
            "text": "[1]. The use of this case study also allowed us to compare the generated model with previous generations that were carried out programmatically by means of a java tool that coded the transformation mappings in traditional structured programming. The result of that previous research is found in [43] . In order to facilitate the replication of this study, all the experimental materials (transformation, metamodels as well as input and output models) are available online [3] . The case selected was GIST-ERA, an information system of an Italian ship refurbishment company. GIST-ERA allows to manage and plan all the exact measurements that must be taken for every cabin. The particularity of huge cruise ships is that the size of cabin changes over time because of the metallic structure and continuous dilatation and contraction of this. GIST-ERA follows a client-server architecture. A client application for tablets allows the staff to register all the measures as well as help them to follow an optimal process preventing mistakes. The server side collects all the measures and manages them optimizing material and accessories orders. Technologically, the system is written in C# and uses a MS SQL Server as storage system. Additionally, this system was coded by using Dynamic MVC framework, which helps to produce data-driven Model/View/Controller applications. The size of the system is 38KLOC with 414 classes.",
            "cite_spans": [
                {
                    "start": 295,
                    "end": 299,
                    "text": "[43]",
                    "ref_id": "BIBREF40"
                },
                {
                    "start": 472,
                    "end": 475,
                    "text": "[3]",
                    "ref_id": "BIBREF1"
                }
            ],
            "ref_spans": [],
            "section": "Proof-of-concept"
        },
        {
            "text": "In Fig. 8 we present the input KDM model of the case study. In (a) a package where a CompilationUnit with the Controller word in the name is shown, which will be transformed into an ApplicationFunction in Archimate. In (b) a package where the Repository word is present as annotation and in the name of the element is shown, which will be transformed into a DataObject in Archimate.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 3,
                    "end": 9,
                    "text": "Fig. 8",
                    "ref_id": null
                }
            ],
            "section": "Proof-of-concept"
        },
        {
            "text": "After the execution of the transformation, we generated the ArchiMate model which is imported in the Archi tool and can be navigated within the generated folders, views, and other elements. Figure 9 shows a snapshot of the complete Archi tool with three main elements: the Models tree view can be seen on the left side, with the Application Cooperation ViewPoint diagram selected, showing the graphical representation of this viewpoint with an excerpt of the generated elements in the centre, and the elements palette on the right side of Fig. 9 . The elements shown are of type ApplicationComponent in the top right (IDynami-cRepository and DynamicRepository), ApplicationFunction in the bottom centre (MisureEccezioneController and OrdineMaterialeController), and DataObject in the top left (DynamicComplexEntityPropertyMetadataFixup, Dynamic-CollectionEntityPropertyMetadataFixup and DynamicEn-tityMetadata), with the last one selected. In the properties view it can be seen that the selected DataObject is used ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 190,
                    "end": 198,
                    "text": "Figure 9",
                    "ref_id": null
                },
                {
                    "start": 539,
                    "end": 545,
                    "text": "Fig. 9",
                    "ref_id": null
                }
            ],
            "section": "Proof-of-concept"
        },
        {
            "text": "Although the proof-of-concept demonstrated the applicability of the model transformation to a real case, a more formal case study was conducted with six open-source systems.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Case study"
        },
        {
            "text": "The subject of the study is the ATL model transformation developed while the purpose of the study is the assessment of the complexity and the expressiveness of the outgoing ArchiMate models as well as the scalability of the model transformation, which are directly related to research questions RQ1 to RQ3, respectively.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Research goal and questions"
        },
        {
            "text": "RQ1. Does the model transformation generate non-complex ArchiMate models?",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Research goal and questions"
        },
        {
            "text": "RQ2. Does the model transformation generate ArchiMate models with enough expressiveness? RQ3. Is the model transformation scalable for larger KDM models?",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Research goal and questions"
        },
        {
            "text": "First, complexity (RQ1) has been widely studied as one of the most important measurable concepts in EA [23, 56] , and it has been demonstrated to be related to the understandability and maintainability of models [9, 23, 53] . Second, expressiveness (RQ2) is introduced in this research as the ratio of input models that are eventually transformed into output elements. This aspect is important since the proposed model transformation filters some elements during transformation. Finally, scalability (RQ2) is related to the efficiency of the model transformation. This focuses on the scalability regarding the size of the input models to demonstrate its applicability even with larger systems. This is because we do not have benchmarks of similar model transformations to compare the transformation time.",
            "cite_spans": [
                {
                    "start": 103,
                    "end": 107,
                    "text": "[23,",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 108,
                    "end": 111,
                    "text": "56]",
                    "ref_id": "BIBREF53"
                },
                {
                    "start": 212,
                    "end": 215,
                    "text": "[9,",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 216,
                    "end": 219,
                    "text": "23,",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 220,
                    "end": 223,
                    "text": "53]",
                    "ref_id": "BIBREF50"
                }
            ],
            "ref_spans": [],
            "section": "Research goal and questions"
        },
        {
            "text": "It should be noticed that the effectiveness of the model transformation is not analysed from a point of view of the sensitivity and specificity of the ArchiMate elements generated (i.e., the study of recall and precision from an information retrieval perspective). This is because it is not possible to satisfy the need of human intervention, i.e., experts who know the context and business domain of every system and are able to annotate the ArchiMate models and determine wrong elements (false positives) and missing elements (false negative). This was done in a previous, similar case study [43] . However, to count with actual experts for open-source systems is no possible and this is the reason for which this is outside of the scope of the case study.",
            "cite_spans": [
                {
                    "start": 594,
                    "end": 598,
                    "text": "[43]",
                    "ref_id": "BIBREF40"
                }
            ],
            "ref_spans": [],
            "section": "Research goal and questions"
        },
        {
            "text": "The independent variable of the study is the case under study, i.e., the output ArchiMate model generated from each selected system, which is the unit of analysis. Regarding RQ1, the case study considers various variables that are directly related to the complexity:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Measures and variables"
        },
        {
            "text": "\u2022 Size It is defined as the set of elements or relationships in the output ArchiMate model. It is distinguished for elements (Size ele ) and relationships (Size rel ). Size is an instrumental measure, but it is still associated with the complexity [23] .",
            "cite_spans": [
                {
                    "start": 248,
                    "end": 252,
                    "text": "[23]",
                    "ref_id": "BIBREF20"
                }
            ],
            "ref_spans": [],
            "section": "Measures and variables"
        },
        {
            "text": "\u2022 Connectivity It is the ratio between the total number of relationships and the total number of elements.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Measures and variables"
        },
        {
            "text": "\u2022 Density It represents the ratio between the total number of relationship in a model and the maximum number of possible arcs (considering ArchiMate models as directed graphs). Both, connectivity and density affect the complexity (and therefore the understandability and maintainability) in a negative manner [9] . That means that lower connectivity and density values lead to ArchiMate models which are more understandable and modifiable, thanks to a lower level of intricacy.",
            "cite_spans": [
                {
                    "start": 309,
                    "end": 312,
                    "text": "[9]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "Measures and variables"
        },
        {
            "text": "\u2022 Heterogeneity (Entropy) This is applied to elements and relationships in ArchiMate models and measures the diversity of kind of elements or relationships used in a certain model. Heterogeneity is directly related to complexity [23, 56] . With regard to RQ2, it evaluates the expressiveness that relates the output and input model. For this purpose, the measurable concept is the amount of class elements in the input model that are eventually transformed into one of the possible elements in the ArchiMate model. This attempts to provide a numeric value of the number of elements in the input models that were useful and therefore transformed into some elements in the output model. \u2022 Transformation ratio It is defined as the ratio between the output size and the input size. The input size is defined as the number of Class Unit elements in the input KDM model.",
            "cite_spans": [
                {
                    "start": 229,
                    "end": 233,
                    "text": "[23,",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 234,
                    "end": 237,
                    "text": "56]",
                    "ref_id": "BIBREF53"
                }
            ],
            "ref_spans": [],
            "section": "Measures and variables"
        },
        {
            "text": "Finally, in order to assess RQ3, related to the study of the scalability, it considers the model transformation time to be analysed in comparison with Size input . \u2022 Model transformation time, that is the total time spent by the ATL engine to execute the proposed model transformation and generate the ArchiMate model.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Measures and variables"
        },
        {
            "text": "The six case under study were selected according to the following criteria: (i) the system must be an enterprise system (i.e., the system supports business processes or some managerial aspects of the organization that uses the information system); (ii) it must be coded in C#, since this is the programming language supported by the ArchiRev tool to generate the KDM models; and (iii) the system must contain at least 5000 lines of code in C# to be analysed. Table 4 shows the six projects selected from GitHub with a brief description, KLOC, C# KLOC and the number of C# files to be analysed. ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 459,
                    "end": 466,
                    "text": "Table 4",
                    "ref_id": "TABREF8"
                }
            ],
            "section": "Case selection"
        },
        {
            "text": "The execution procedure of the case study consists of four steps. First, (i) the source code of the information systems is analysed with ArchiRev and the respective KDM models are generated. Second, (ii) the KDM models are then transformed into ArchiMate models by means of the proposed model transformation that is executed through ATL engine embedded in Eclipse. Third, (iii) the ArchiMate models are inspected to take other measures that were not automatically collected (as the transformation time) and derived variables are computed as well. Finally, (iv) the whole dataset is analysed for answering research questions and draw conclusions of the case study.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Execution procedure and data collection"
        },
        {
            "text": "The execution environment consisted of macOS BigSur with intel i5, ATL version 4.2.1.v202006221222 and Eclipse Modeling Tools version 2020-09 (4.17.0). Table 5 shows the whole dataset completed after the six information systems (S1-S6) were analysed and transformed into ArchiMate models. First rows provide information about the input KDM models that was generated from the inspection of the C# source code. Then, the model transformation time in seconds is provides. The following set of rows provides number of elements and relationships in the outgoing ArchiMate model. Finally, bottom rows provide the three variables to be analysed: cohesion, coupling and coverage. The ride side of Table 5 provides aggregated values for every row with minimum, maximum, mean, and standard deviation.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 152,
                    "end": 159,
                    "text": "Table 5",
                    "ref_id": "TABREF9"
                },
                {
                    "start": 689,
                    "end": 696,
                    "text": "Table 5",
                    "ref_id": "TABREF9"
                }
            ],
            "section": "Execution procedure and data collection"
        },
        {
            "text": "This section provides the evaluation of the artefact proposed. First, Sect. 6.1 analyses the results obtained in the case study. Then, Sect. 6.2 discusses the threats to the validity. Figure 10 summarizes results of the case study. Left-hand side provides two bar plots for analysing variables regarding RQ1, i.e., connectivity and density (top-left) and heterogeneity (bottom-left). Then, the transformation ratio (RQ2) is graphically analysed in a bar plot (see top-right plot in Fig. 10) . Finally, Fig. 10 (bottom-right) provides the scatter plot and trend line to analyse the scalability of the model transformation (RQ3).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 184,
                    "end": 193,
                    "text": "Figure 10",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 482,
                    "end": 490,
                    "text": "Fig. 10)",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 502,
                    "end": 509,
                    "text": "Fig. 10",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Evaluation"
        },
        {
            "text": "Density is normalized between 0 and 1; and the values for the six models are 0.13 on average. According to the connectivity definition, these values are not normalized and could be higher for bigger models. In the 6 models with a Size ele = 41.5 on average, the connectivity values vary between 0.36 and 0.98. Although there are not indicators in the literature for connectivity, the obtained values mean that there are between one and three elements for each relationship in the ArchiMate Model. These results suggest that the complexity of the model is affordable.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Result analysis"
        },
        {
            "text": "With regard to heterogeneity, the six models have similar values on average (see Fig. 10 ) that are, respectively, 0.58 and 0.50 for elements and relationships. On the one hand, these values are low contributing to a lower complexity which is good, in turn, for understandability and maintainability of ArchiMate models. On the other hand, it should be noticed that there are various kind of ArchiMate elements that are almost not present in any of the six output models (see Table 5 ). This suggests that additional mappings considering other input annotations (apart from those in Table 2 ) could be necessary to be able to generate more elements and provide more complete ArchiMate models. Involving human experts in future case studies will probably lead to improve the model transformation in this regard. However, as we explained before, it is outside of the scope of this current study.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 81,
                    "end": 88,
                    "text": "Fig. 10",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 476,
                    "end": 483,
                    "text": "Table 5",
                    "ref_id": "TABREF9"
                },
                {
                    "start": 583,
                    "end": 590,
                    "text": "Table 2",
                    "ref_id": "TABREF5"
                }
            ],
            "section": "Result analysis"
        },
        {
            "text": "As a result, RQ1 can be answered positively, although in a moderate way. The results obtained seems to provide ArchiMate models with a moderate complexity that in somehow are manageable by enterprise architects in case these models have to be improved, modified or integrated with other EA models.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Result analysis"
        },
        {
            "text": "About RQ2, the transformation ratio in some of the output models is medium-low, with an approximate 30% on average. This signifies, that various class units in KDM were not used in the model transformation rules. This was expected since class units are filtered according to specific annotations as we previously depicted. In other words, a transformation ratio of 100% was not expected. Thereby, this value is certainly representative. In general, we cannot reject the hypothesis that the model transformation does not provide output model with enough expressiveness. Anyway, further experimentation will be necessary as we already mentioned.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Result analysis"
        },
        {
            "text": "About scalability (RQ3), despite we have few cases to extract stronger conclusions, the trend line according to the correlation value (R 2 = 0.87) suggests a linear relationship between the size of KDM models and the time spent to transform such models. As we discussed before, the model transformation could vary depending on the transformation ratio (i.e., the number of annotation in class units more than merely depending on the number of class units) among other factors. Anyway, with the current evidence, we can suggest that the model transformation time will not increase exponentially for larger KDM models. Actually, the R 2 for the exponential model was 0.41, which can explain worse the hypothesized scalability.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Result analysis"
        },
        {
            "text": "The case study has some issues threatening its validity that must be commented transparently. First, the case study considers variables that have been used in similar works directly related to the complexity of EA models; however other measures based on the experts' opinion could improve the evidence about effectiveness of model transformation (e.g., precision and recall regarding relevant and missing elements in output models among others). Although it is a threat for the construct validity, the lack of available experts on eligible cases prevents to choose these metrics.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Threats to the validity"
        },
        {
            "text": "Regarding internal validity, there is no large population with regard to the cases under study. Therefore, results are statistically less representative. Despite this, a trend for the proposed measures was identifiable in the case study. In order to mitigate this threat, we hope to contrast the result of this case, by means of meta-analysis, with future results obtained from additional case studies.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Threats to the validity"
        },
        {
            "text": "Other threat to the internal validity is the tool we employed for generating the KDM models (ArchiRev), since it introduced a bias for the study. KDM models representing KDM code and action packages that are generated with other tools might be included in future case studies. Also, the outgoing EA models are not represented with the Model Exchange File Format which prevents the tool interoperability and therefore limits the generalisability of results.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Threats to the validity"
        },
        {
            "text": "Finally, about generalisability of the results, it can be only generalised to KDM models generated with ArchiRev from enterprise/management information systems coded in C#. Thus, it is clear that further evidence is necessary.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Threats to the validity"
        },
        {
            "text": "One of the biggest challenges to achieve an operational Enterprise Architecture Management is the ability to automatically retrieve parts or skeletons of enterprise architecture models from the most common IT artefacts. We believe the semiautomatic EA modelling is key to re-align business and IT in a volatile business world. We think an MDE approach helps a lot in this matter. Thus, the research presented in paper follows the MDE approach and proposes the usage of KDM as an intermediate step between information systems artefacts and target ArchiMate models. The usage of KDM helps to integrate knowledge extracted by reverse engineering from different artefacts. As a result, the usage of KDM contributes to integrate information coming from different sources and thus the proposed model transformation between KDM and ArchiMate can exploit those crosscutting relationships.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions and future work"
        },
        {
            "text": "The KDM-to-ArchiMate model transformation has been implemented in ATL, which allowed us to validate it with a KDM model extracted from real-life information systems. We believe this case study demonstrates the feasibility of transforming KDM into ArchiMate models which, in turn, facilitates the applicability in the industry in a greater extent.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions and future work"
        },
        {
            "text": "Despite the preliminary insights, we are conscious of the limitations of the proposal. For example, KDM should be populated with the extraction of information of further information systems' artefacts like for example, data model, enterprise service bus, etc.; and the ATL model transformation should be extended accordingly. Fortunately, KDM is an ISO/IEC standard that is employed in the industry up to a certain extent, so many reverse engineering tools that are able to generate KDM models may be reused, i.e., the outgoing KDM models may be transformed into ArchiMate models. As a consequence, EA mining is automated, and the EA management is benefited through an easier, continuous re-adaptation. In this way, the EA debt [19] , analogous to the technical debt, can be kept or even reduced. Also, one of the rationale of this proposal was that the usage of KDM prevent to use independent silo solutions for EA modelling. Thus, a limitation of this work is the lack of validation to demonstrate that a KDM-based approach performs better than silo solutions. This means that the usage of MDE and standard metamodels on the automatic EA modelling should be analysed in the future to figure out how those aspects influence the mentioned problems of manual EA modelling, i.e., error-proneness, time-consumption, slow and poor readaptation and costs.",
            "cite_spans": [
                {
                    "start": 728,
                    "end": 732,
                    "text": "[19]",
                    "ref_id": "BIBREF16"
                }
            ],
            "ref_spans": [],
            "section": "Conclusions and future work"
        },
        {
            "text": "Our future research will be basically oriented toward improvement of the model transformation through the parametrization. We are conscious of default relationships defined between certain types of ArchiMate elements could be improved with some previous setup that allow to generate different types of relationships under different conditions. Moreover, we will work on strengthening the validation of the model transformation with additional case studies in different information systems and using further IT artefacts.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions and future work"
        },
        {
            "text": "Open Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http:// creat iveco mmons. org/ licen ses/ by/4. 0/.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions and future work"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Empirical insights into the development of a service-oriented enterprise architecture",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Alwadain",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Fielt",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Korthaus",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Rosemann",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "Data Knowl. Eng",
            "volume": "105",
            "issn": "",
            "pages": "39--52",
            "other_ids": {
                "DOI": [
                    "10.1016/j.datak.2015.09.004"
                ]
            }
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "KDM2Archi-Mate model transformation",
            "authors": [
                {
                    "first": "V",
                    "middle": [],
                    "last": "Bacigalupe",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Delgado",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "P\u00e9rez-Castillo",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Archi. Archimate modelling tool",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Beauvoir",
                    "suffix": ""
                },
                {
                    "first": "J.-B",
                    "middle": [],
                    "last": "Sarrodie",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Applying dynamic Bayesian networks for automated modeling in ArchiMate: a realization study",
            "authors": [
                {
                    "first": "B",
                    "middle": [],
                    "last": "Bebensee",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Hacks",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "2019 IEEE 23rd International Enterprise Distributed Object Computing Workshop (EDOCW)",
            "volume": "",
            "issn": "",
            "pages": "17--24",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Towards integrating microservices with adaptable enterprise architecture",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Bogner",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Zimmermann",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "2016 IEEE 20th International Enterprise Distributed Object Computing Workshop",
            "volume": "75843",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1109/EDOCW.2016.7584392"
                ]
            }
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Modisco: a model driven reverse engineering framework",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Bruneli\u00e8re",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Cabot",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Dup\u00e9",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Madiot",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "Inf. Softw. Technol",
            "volume": "56",
            "issn": "8",
            "pages": "1012--1032",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Generating visualizations of enterprise architectures using model transformations",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Buckl",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Ernst",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Lankes",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Schweda",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Wittenburg",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "Proceedings of the 2nd International Workshop on Enterprise Modelling and Information Systems Architectures (EMISA'07)",
            "volume": "",
            "issn": "",
            "pages": "33--46",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Artifact-based vs. human-perceived understandability and modifiability of refactored business processes: an experiment",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Caivano",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Fern\u00e1ndez-Ropero",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "P\u00e9rez-Castillo",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Piattini",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Scalera",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "J. Syst. Softw",
            "volume": "144",
            "issn": "",
            "pages": "143--164",
            "other_ids": {
                "DOI": [
                    "10.1016/j.jss.2018.06.026"
                ]
            }
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "BizDevOps: a process model for the alignment of DevOps with business goals",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Chasioti",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "On transforming DEMO models to ArchiMate. 113 LNBIP",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "De Kinderen",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Gaaloul",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [
                        "A E"
                    ],
                    "last": "Proper",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "270--284",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Bimodal enterprise architecture management: the emergence of a new EAM function for a BizDevOps-based fast IT",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Drews",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [],
                    "last": "Schirmer",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Horlach",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Tekaat",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "2017 IEEE 21st International Enterprise Distributed Object Computing Workshop",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1109/EDOCW.2017.18"
                ]
            }
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Transforming e3value models into ArchiMate diagrams",
            "authors": [
                {
                    "first": "W",
                    "middle": [],
                    "last": "Engelsman",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Wieringa",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "V"
                    ],
                    "last": "Sinderen",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Gordijn",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Haaker",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "2020 IEEE 24th International Enterprise Distributed Object Computing Conference (EDOC)",
            "volume": "",
            "issn": "",
            "pages": "11--20",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Towards automation of enterprise architecture model maintenance",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Farwick",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "24th International Conference on Advanced Information Systems Engineering (CAiSE'12)-Doctoral Consortium. I. Mirbel and B. Pernici",
            "volume": "",
            "issn": "",
            "pages": "1--11",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "A situational method for semi-automated enterprise architecture documentation",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Farwick",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [
                        "M"
                    ],
                    "last": "Schweda",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Breu",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [],
                    "last": "Hanschke",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "Softw. Syst. Model",
            "volume": "15",
            "issn": "2",
            "pages": "397--426",
            "other_ids": {
                "DOI": [
                    "10.1007/s10270-014-0407-3"
                ]
            }
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "A novel executable modeling approach for system-of-systems architecture",
            "authors": [
                {
                    "first": "B",
                    "middle": [],
                    "last": "Ge",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "W"
                    ],
                    "last": "Hipel",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Yang",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "IEEE Syst. J",
            "volume": "8",
            "issn": "1",
            "pages": "4--13",
            "other_ids": {
                "DOI": [
                    "10.1109/JSYST.2013.2270573"
                ]
            }
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Towards recovering the software architecture of microservice-based systems",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Granchelli",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Cardarelli",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [
                        "D"
                    ],
                    "last": "Francesco",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [],
                    "last": "Malavolta",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Iovino",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "D"
                    ],
                    "last": "Salle",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "2017 IEEE International Conference on Software Architecture Workshops",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1109/ICSAW.2017.48"
                ]
            }
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "Towards the definition of enterprise architecture debts",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Hacks",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "H\u00f6fert",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Salentin",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [
                        "C"
                    ],
                    "last": "Yeong",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Lichter",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "2019 IEEE 23rd International Enterprise Distributed Object Computing Workshop (EDOCW)",
            "volume": "",
            "issn": "",
            "pages": "9--16",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Design science in information system research",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Hevner",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "March",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Park",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Ram",
                    "suffix": ""
                }
            ],
            "year": 2004,
            "venue": "MIS Q",
            "volume": "28",
            "issn": "1",
            "pages": "75--105",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Automatic data collection for enterprise architecture models",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Holm",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Buschle",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Lagerstr\u00f6m",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Ekstedt",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "Softw. Syst. Model",
            "volume": "13",
            "issn": "2",
            "pages": "825--841",
            "other_ids": {
                "DOI": [
                    "10.1007/s10270-012-0252-1"
                ]
            }
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "a model driven service engineering approach to system of systems",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Hu",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Chang",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Cao",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "2014 IEEE International Systems Conference Proceedings",
            "volume": "68192",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1109/SysCon.2014.6819248"
                ]
            }
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Measuring enterprise architecture complexity",
            "authors": [
                {
                    "first": "M",
                    "middle": [
                        "E"
                    ],
                    "last": "Iacob",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Monteban",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "V"
                    ],
                    "last": "Sinderen",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Hegeman",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Bitaraf",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "2018 IEEE 22nd International Enterprise Distributed Object Computing Workshop (EDOCW)",
            "volume": "",
            "issn": "",
            "pages": "115--124",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "An Introduction to Design Science",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Johannesson",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Perjons",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Automatic probabilistic enterprise IT architecture modeling: a dynamic Bayesian networks approach",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Johnson",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Ekstedt",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Lagerstrom",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "2016 IEEE 20th International Enterprise Distributed Object Computing Workshop (EDOCW)",
            "volume": "",
            "issn": "",
            "pages": "1--8",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "ATL: a model transformation tool",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Jouault",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Allilaire",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "B\u00e9zivin",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [],
                    "last": "Kurtev",
                    "suffix": ""
                }
            ],
            "year": 2008,
            "venue": "J. Sci. Comput. Program",
            "volume": "72",
            "issn": "1-2",
            "pages": "31--39",
            "other_ids": {
                "DOI": [
                    "10.1016/j.scico.2007.08.002"
                ]
            }
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "Model driven engineering",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Kent",
                    "suffix": ""
                }
            ],
            "year": 2002,
            "venue": "International Conference on Integrated Formal Methods",
            "volume": "",
            "issn": "",
            "pages": "286--298",
            "other_ids": {}
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "Automated enterprise architecture model maintenance via runtime IT discovery",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Kleehaus",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Matthes",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Architecting the Digital Transformation: Digital Business, Technology, Decision Support, Management",
            "volume": "",
            "issn": "",
            "pages": "247--263",
            "other_ids": {}
        },
        "BIBREF26": {
            "ref_id": "b26",
            "title": "Consolidating enterprise architecture management research",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Kotusev",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Singh",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [],
                    "last": "Storey",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "48th Hawaii International Conference on System Sciences",
            "volume": "",
            "issn": "",
            "pages": "4069--4078",
            "other_ids": {}
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Supporting the specification and serialization of planned architectures in architecture-driven modernization context",
            "authors": [
                {
                    "first": "A",
                    "middle": [
                        "D S"
                    ],
                    "last": "Landi",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Chagas",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [
                        "M"
                    ],
                    "last": "Santos",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [
                        "S"
                    ],
                    "last": "Costa",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Durelli",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Terra",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [
                        "V D"
                    ],
                    "last": "Camargo",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "2017 IEEE 41st Annual Computer Software and Applications Conference (COMPSAC)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1109/COMPSAC.2017.225"
                ]
            }
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "A general framework to identify software components from execution data",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [
                        "F"
                    ],
                    "last": "Van Dongen",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Assy",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [
                        "M"
                    ],
                    "last": "Van Der Aalst",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "14th International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE'19)",
            "volume": "",
            "issn": "",
            "pages": "234--241",
            "other_ids": {}
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "MVC frameworks modernization approach: adding MVC concepts to KDM metamodel",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Moutaouakkil",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Mbarki",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Int. J. Adv. Comput. Sci. Appl",
            "volume": "10",
            "issn": "10",
            "pages": "304--310",
            "other_ids": {}
        },
        "BIBREF30": {
            "ref_id": "b30",
            "title": "The Object Management Group",
            "authors": [],
            "year": 2008,
            "venue": "OMG: MOF Query/View/Transformation (QVT) v1.3",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF31": {
            "ref_id": "b31",
            "title": "Business Process Model and Notation (BPMN) 2.0.2",
            "authors": [
                {
                    "first": "",
                    "middle": [],
                    "last": "Omg",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF32": {
            "ref_id": "b32",
            "title": "OMG: MDA Guide Version 2",
            "authors": [],
            "year": 2014,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF33": {
            "ref_id": "b33",
            "title": "OMG: Architecture-Driven Modernization (ADM): Knowledge Discovery Meta-Model (KDM)",
            "authors": [],
            "year": 2016,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF34": {
            "ref_id": "b34",
            "title": "The Object Management Group",
            "authors": [],
            "year": 2016,
            "venue": "OMG: Meta Object Facility (MOF\u2122) versi\u00f3n 2.5.1",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF35": {
            "ref_id": "b35",
            "title": "UML 2.5.1",
            "authors": [],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF36": {
            "ref_id": "b36",
            "title": "OMG: ADM Task Force by OMG",
            "authors": [],
            "year": 2020,
            "venue": "",
            "volume": "25",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF37": {
            "ref_id": "b37",
            "title": "The design science research process: a model for producing and presenting information systems research",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Peffers",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Tuunanen",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [
                        "E"
                    ],
                    "last": "Gengler",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Rossi",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Hui",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Virtanen",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Bragge",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "Proceedings of the First International Conference on Design Science Research in Information Systems and Technology (DESRIST 2006)",
            "volume": "",
            "issn": "",
            "pages": "83--106",
            "other_ids": {}
        },
        "BIBREF38": {
            "ref_id": "b38",
            "title": "A method for business-IT alignment of legacy systems",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Pepin",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Andr\u00e9",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Attiogbe",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Breton",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "Proceedings of the 17th International Conference on Enterprise Information Systems",
            "volume": "3",
            "issn": "",
            "pages": "229--237",
            "other_ids": {}
        },
        "BIBREF39": {
            "ref_id": "b39",
            "title": "MARBLE: modernization approach for recovering business processes from legacy information systems",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "P\u00e9rez-Castillo",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "28th IEEE International Conference on Software Maintenance (ICSM'12)",
            "volume": "",
            "issn": "",
            "pages": "671--676",
            "other_ids": {}
        },
        "BIBREF40": {
            "ref_id": "b40",
            "title": "ArchiRev-Reverse engineering of information systems toward ArchiMate models. An industrial case study",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "P\u00e9rez-Castillo",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Caivano",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Ruiz",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Piattini",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "J. Softw. Evol. Process",
            "volume": "33",
            "issn": "2",
            "pages": "1--27",
            "other_ids": {
                "DOI": [
                    "10.1002/smr.2314"
                ]
            }
        },
        "BIBREF41": {
            "ref_id": "b41",
            "title": "Business process archeology using MARBLE",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "P\u00e9rez-Castillo",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [
                        "G"
                    ],
                    "last": "De Guzm\u00e1n",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": ".-R",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Piattini",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "Inf. Softw. Technol",
            "volume": "53",
            "issn": "10",
            "pages": "1023--1044",
            "other_ids": {
                "DOI": [
                    "10.1016/j.infsof.2011.05.006"
                ]
            }
        },
        "BIBREF42": {
            "ref_id": "b42",
            "title": "Knowledge discovery metamodel-ISO/IEC 19506: a standard to modernize legacy systems",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "P\u00e9rez-Castillo",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [
                        "G"
                    ],
                    "last": "De Guzm\u00e1n",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": ".-R",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Piattini",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "Comput. Stand. Interfaces",
            "volume": "33",
            "issn": "6",
            "pages": "519--532",
            "other_ids": {
                "DOI": [
                    "10.1016/j.csi.2011.02.007"
                ]
            }
        },
        "BIBREF43": {
            "ref_id": "b43",
            "title": "Database schema elicitation to modernize relational databases",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "P\u00e9rez-Castillo",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [],
                    "last": "Garc\u00eda Rodr\u00edguez De Guzm\u00e1n",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Caivano",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Piattini",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "14th International Conference on Enterprise Information Systems (ICEIS'12)",
            "volume": "1",
            "issn": "",
            "pages": "126--132",
            "other_ids": {}
        },
        "BIBREF44": {
            "ref_id": "b44",
            "title": "A systematic mapping study on enterprise architecture mining",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Perez-Castillo",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Ruiz-Gonzalez",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Genero",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Piattini",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1080/17517575.2019.1590859"
                ]
            }
        },
        "BIBREF46": {
            "ref_id": "b46",
            "title": "A decision-making support system for enterprise architecture modelling",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "P\u00e9rez-Castillo",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Ruiz",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Piattini",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Decis. Support Syst",
            "volume": "131",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1016/j.dss.2020.113249"
                ]
            }
        },
        "BIBREF47": {
            "ref_id": "b47",
            "title": "Enterprise architecture",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Perez-Castillo",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Ruiz",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Piattini",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Ebert",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Softw",
            "volume": "36",
            "issn": "4",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1109/MS.2019.2909329"
                ]
            }
        },
        "BIBREF48": {
            "ref_id": "b48",
            "title": "Enterprise architecture modelling: purpose, requirements and language",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "P\u00e9rez-Castillo",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Weber",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [],
                    "last": "Garc\u00eda Rodr\u00edguez De Guzm\u00e1n",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Piattini",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [
                        "A"
                    ],
                    "last": "Proper",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Bjekovi\u0107",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [
                        "V"
                    ],
                    "last": "Gils",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "D"
                    ],
                    "last": "Kinderen",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "27th Annual ACM Symposium on Applied Computing (SAC'12)",
            "volume": "",
            "issn": "",
            "pages": "162--169",
            "other_ids": {}
        },
        "BIBREF49": {
            "ref_id": "b49",
            "title": "Model-driven engineering: a survey supported by the unified conceptual model",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Rodrigues Da Silva",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "Comput. Lang. Syst. Struct",
            "volume": "43",
            "issn": "",
            "pages": "139--155",
            "other_ids": {
                "DOI": [
                    "10.1016/j.cl.2015.06.001"
                ]
            }
        },
        "BIBREF50": {
            "ref_id": "b50",
            "title": "Prediction models for BPMN usability and maintainability",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Rolon",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Sanchez",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Garcia",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Ruiz",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Piattini",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Caivano",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Visaggio",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "IEEE Conf. Commer. Enterp. Comput",
            "volume": "",
            "issn": "",
            "pages": "383--390",
            "other_ids": {}
        },
        "BIBREF51": {
            "ref_id": "b51",
            "title": "Extraction and Reconstruction of Enterprise Models",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "S\u00e1nchez",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "C"
                    ],
                    "last": "Reyes",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Villalobos",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "Lecture Notes in Business Information Processing",
            "volume": "191",
            "issn": "",
            "pages": "3--20",
            "other_ids": {}
        },
        "BIBREF52": {
            "ref_id": "b52",
            "title": "Model-driven engineering",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Schmidt",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "Comput. IEEE Comput. Soc",
            "volume": "39",
            "issn": "2",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF53": {
            "ref_id": "b53",
            "title": "Complexity in enterprise architectures-conceptualization and introduction of a measure from a system theoretic perspective",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Sch\u00fctz",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Widjaja",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Kaiser",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "21st European Conference on Information Systems, ECIS 2013",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF54": {
            "ref_id": "b54",
            "title": "An exploration of enterprise architecture research",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Simon",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Fischbach",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Schoder",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "Commun. Assoc. Inf. Syst",
            "volume": "32",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF55": {
            "ref_id": "b55",
            "title": "The Open Group: TOGAF. Enterprise Edition. Version 9",
            "authors": [],
            "year": 2011,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF56": {
            "ref_id": "b56",
            "title": "The Open Group: The ArchiMate 3.0 Enterprise Architecture Modeling Language",
            "authors": [],
            "year": 2016,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF57": {
            "ref_id": "b57",
            "title": "The Open Group: TOGAF\u00ae Worldwide",
            "authors": [],
            "year": 2016,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF58": {
            "ref_id": "b58",
            "title": "The Open Group: ArchiMate\u00ae Model Exchange File Format for the ArchiMate 3.1 Modeling Language",
            "authors": [],
            "year": 2019,
            "venue": "",
            "volume": "26",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF59": {
            "ref_id": "b59",
            "title": "Re-engineering enterprises using data warehouse as a driver and requirements as an enabler",
            "authors": [
                {
                    "first": "T",
                    "middle": [
                        "M"
                    ],
                    "last": "Truong",
                    "suffix": ""
                },
                {
                    "first": "L.-S",
                    "middle": [],
                    "last": "L\u00ea",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [
                        "P"
                    ],
                    "last": "T\u00f4n",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "2017 IEEE 21st International Enterprise Distributed Object Computing Conference (EDOC",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1109/EDOC.2017.18"
                ]
            }
        },
        "BIBREF60": {
            "ref_id": "b60",
            "title": "Uncovering the runtime enterprise architecture of a large distributed organisation",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Van Langerak",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "M E M"
                    ],
                    "last": "Van Der Werf",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Brinkkemper",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "A Process Mining-Oriented Approach",
            "volume": "10253",
            "issn": "",
            "pages": "247--263",
            "other_ids": {}
        },
        "BIBREF61": {
            "ref_id": "b61",
            "title": "Modeldriven software development: technology, engineering, managementedtion",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "V\u00f6lter",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Stahl",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Bettin",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Haase",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Helsen",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF62": {
            "ref_id": "b62",
            "title": "Architectural Intelligence: A Framework and Application to e-Learning. RADAR+EMISA@CAiSE",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "M E M V D"
                    ],
                    "last": "Werf",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [
                        "V"
                    ],
                    "last": "Schuppen",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Brinkkemper",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Jansen",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Boon",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [
                        "V D"
                    ],
                    "last": "Plas",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF63": {
            "ref_id": "b63",
            "title": "Design science methodology for information systems and software engineeringedtion",
            "authors": [
                {
                    "first": "R",
                    "middle": [
                        "J"
                    ],
                    "last": "Wieringa",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF64": {
            "ref_id": "b64",
            "title": "Collaborative decision support for adaptive digital enterprise architecture",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Zimmermann",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Jugel",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Schmidt",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Schweda",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "M\u00f6hring",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF65": {
            "ref_id": "b65",
            "title": "Publisher's Note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "Comparison of EA mining techniques by using (or not) Knowledge Discovery Metamodel",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "Possible transformations in MDA context",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Layers, packages and concerns in KDM (Adapted from[36])",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "A simplified view of the Code and Action packages of the KDM metamodel",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "A simplified view of the C# metamodel \u2022 Archi tool has been developed by The Open Group staff and is compliant with the ArchiMate standard. \u2022 Archi can export ArchiMate models to Exchange File Format",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "Helper isAppFunc example of helper used for elements genera\u019fon in Lis\u019fng 2 helper def: isAppFunc(input: KDM!CompilationUnit): Boolean = if (input.annotation -> exists (o | o.text = 'Service')) then true else if (input.name -> indexOf('Service') > 0) then true else if (input.annotation -> exists (o | o.text = 'Named')) then true else if (input.name -> indexOf('Named') > 0) then true else if (input.annotation -> exists (o | o.text = 'ManagedBean')) then true else if (input.name -> indexOf('ManagedBean') > 0) then true else if (input.annotation -> exists (o | o.text = 'Component')) then true else if (input.name -> indexOf('Component') > 0) then true else if (input.annotation -> exists (o | o.text = 'Controller')) then true else (input.name -> indexOf('Controller')",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "Lis\u019fng 4 helper def: isDataObj(input: KDM!CompilationUnit): Boolean = if (input.annotation -> exists (o | o.text = 'MappedSuperclass')) then true else if (input.name -> indexOf('MappedSuperclass') > 0) then true else if (input.annotation -> exists (o | o.text = '",
            "latex": null,
            "type": "figure"
        },
        "FIGREF7": {
            "text": ") > 0) then true else if (input.annotation -> exists (o | o.text = 'Entity')) then true else (input.name -> indexOf('Entity') > 0) endif endif endif endif endif; Fig. 8 Input.xmi file for the KDM model with the 'controller' annotation in a CompilationUnit (a) and a 'repository' annotation in a Compilatio-nUnit (b)",
            "latex": null,
            "type": "figure"
        },
        "FIGREF8": {
            "text": "helper def: isAccessRel(input: KDM!CodeRelationship): Boolean =",
            "latex": null,
            "type": "figure"
        },
        "FIGREF9": {
            "text": "The model class as a copy of the ArchimateModel class \u2022 The DiagramObject class as a copy of the DiagramMod-elArchimateObject class \u2022 The Connection class as a copy of the DiagramMod-elArchimateConnection class \u2022 The attribute folder inside the FolderContainer class as copy of folders attribute \u2022 The attribute element inside the Folder class as copy of elements attribute \u2022 The attribute child inside the DiagramModelContainer class as copy of children attribute \u2022 The attribute sourceConnection and targetConnection inside the Connectable class as copies of sourceConnections and targetConnections attributes, respectively.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF10": {
            "text": "Summary of the analysis results for the case study",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "by Ruth Breu.",
            "latex": null,
            "type": "table"
        },
        "TABREF2": {
            "text": "Mo\u019fva\u019fonS Sc co op pe e o of f t th he e m mo od de el l t tr ra an ns sf fo or rm ma at ti io on nFig. 3ArchiMate 3 core framework (adapted from[59])",
            "latex": null,
            "type": "table"
        },
        "TABREF3": {
            "text": "Fig. 5 Overview of ArchiRev dimensions",
            "latex": null,
            "type": "table"
        },
        "TABREF4": {
            "text": "ArchiRev mapping regarding most common relevant use of reverse engineering techniques, input IS artefacts and EA viewpoints generated",
            "latex": null,
            "type": "table"
        },
        "TABREF5": {
            "text": "Mappings between KDM and ArchiMate elements",
            "latex": null,
            "type": "table"
        },
        "TABREF6": {
            "text": "Default relationships between each pair of Archimate element kinds",
            "latex": null,
            "type": "table"
        },
        "TABREF7": {
            "text": "It will contain nine default folders which were selected based on the ArchiMate examples and most used categorizations for different elements: Strategy, Business, Application, Technology & Physical, Motivation, Implementation & Migration, Other, Relations and Views.Although we generate the complete list of folders, since the mappings defined in",
            "latex": null,
            "type": "table"
        },
        "TABREF8": {
            "text": "Selected cases under study",
            "latex": null,
            "type": "table"
        },
        "TABREF9": {
            "text": "",
            "latex": null,
            "type": "table"
        },
        "TABREF10": {
            "text": "Size ele = #ApplicationFunction + #ApplicationComponent + #ApplicationService + #DataObject Size rel = #Triggering + #Access + #Association + #Serving + #Realization",
            "latex": null,
            "type": "table"
        },
        "TABREF11": {
            "text": "Heterogeneity ele = \u2212",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": [
        {
            "text": "Acknowledgements This study has been partially funded by the ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "acknowledgement"
        },
        {
            "text": "Francisco Ruiz is a full professor at the Information Technologies and Systems Department, University of Castilla-La Mancha (UCLM), Spain. His research interests include enterprise architecture, business-process technology, software engineering and socio-demographic data analytic. Ruiz received a Ph.D. in computer science from UCLM. Virginia Bacigalupe is a technician at the Instituto de Computaci\u00f3n, Facultad de Ingenier\u00eda, Universidad de la Rep\u00fablica, Uruguay. She is an advanced student of Computer Science and will finish her BSc degree this year. Her main research interests are model driven engineering a n d w e b a n d m o b i l e development. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "annex"
        }
    ]
}